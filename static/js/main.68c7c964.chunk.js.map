{"version":3,"sources":["components/textArea/textArea.module.css","components/quotesBox/quotesBox.module.css","components/button/button.module.css","components/button/button.jsx","components/textArea/textArea.jsx","components/quotesBox/quotesBox.jsx","redux/quotesBox-reduser.js","components/quotesBox/quotesBox-container.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","Button","props","onClick","getNewQuote","className","style","btn","TextArea","text","conten","content","id","author","QuotesBox","quoteLength","newQuote","length","heightAndColor","height","actualBackgroundCollor","wrapper","btnWrapper","href","target","data-show-count","async","src","charset","GEN","BACKGROUND_COLOR","initialState","backgroundColor","background","quotesBoxReduser","state","action","type","quote","color","QuotesBoxContainer","axios","then","response","generateNewQuote","data","min","max","chooseColor","Math","floor","random","this","React","Component","connect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,yBAAyB,OAAS,2B,mBCA3FD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,WAAa,8BAA8B,IAAM,yB,mBCAxGD,EAAOC,QAAU,CAAC,IAAM,sB,2MCSTC,EAPA,SAACC,GACZ,OACI,mBAAGC,QAAS,WAAKD,EAAME,eAAgBC,UAAWC,IAAMC,IAAxD,wB,iBCaOC,EAfE,SAACN,GAEd,OACI,sBAAKG,UAAWC,IAAMG,KAAtB,UACI,sBAAMJ,UAAWC,IAAMI,OAAvB,SACKR,EAAMS,QAAUT,EAAMS,QAAU,yBAErC,sBAAMC,GAAG,SAASP,UAAWC,IAAMO,OAAnC,SACKX,EAAMW,OAASX,EAAMW,OAAQ,Y,iBCiB/BC,EAvBG,SAACZ,GAEf,IAAIa,EAAcb,EAAMc,SAASA,SAASC,OACtCC,EAAc,aAAIC,OAAQ,UAAajB,EAAMc,SAASI,wBAO1D,OALGL,EAAc,GAAIG,EAAeC,OAAS,SACrCJ,EAAc,GAAIG,EAAeC,OAAS,OAC1CJ,EAAc,IAAKG,EAAeC,OAAS,OAC3CJ,EAAc,MAAKG,EAAeC,OAAS,QAG/C,sBAAKd,UAAWC,IAAMe,QAASf,MAAOY,EAAtC,UAEI,cAAC,EAAD,CAAUL,OAAQX,EAAMc,SAASA,SAASH,OAAQF,QAAST,EAAMc,SAASA,SAASL,UACnF,sBAAKN,UAAWC,IAAMgB,WAAtB,UACI,cAAC,EAAD,CAAQlB,YAAaF,EAAME,cAC3B,mBAAGmB,KAAK,gDAAgDC,OAAO,SAASnB,UAAWC,IAAMC,IAAKkB,kBAAgB,QAA9G,mBAA+H,wBAAQC,OAAK,EAACC,IAAI,0CAA0CC,QAAQ,iBCrB7MC,EAAM,WACNC,EAAmB,eACrBC,EAAe,CACff,SAAU,wBACVgB,gBAAiB,CACb,CAACC,WAAW,2DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,8DACZ,CAACA,WAAW,+DAEhBb,uBAAwB,MA6Bbc,EA3BU,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACvD,OAAGA,EAAOC,OAASR,EACf,2BACOM,GADP,IACcnB,SAAUoB,EAAOE,QAG3BF,EAAOC,OAASP,EACpB,2BACOK,GADP,IACcf,uBAAwBgB,EAAOG,QAG1CJ,G,QC1BLK,E,4MAcFpC,YAAc,WACZqC,MAAU,kCAAkCC,MAAK,SAAAC,GACjD,EAAKzC,MAAM0C,iBAAiBD,EAASE,U,kEAblB,IAAD,OAClBJ,MAAU,kCAAkCC,MAAK,SAAAC,GACjD,EAAKzC,MAAM0C,iBAAiBD,EAASE,MAErC,IAAcC,EAAKC,EAInB,EAAK7C,MAAM8C,YAAY,EAAK9C,MAAMc,SAASgB,iBAJ7Bc,EAIoD,EAJ/CC,EAIiD,GAH3DE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,GAAOA,W,+BAclD,OAAO,cAAC,EAAD,2BAAeM,KAAKlD,OAApB,IAA2BE,YAAagD,KAAKhD,mB,GAtBzBiD,IAAMC,WA0BxBC,eADO,SAACpB,GAAW,MAAO,CAACnB,SAAUmB,EAAMnB,YACnB,CAAC4B,iBDER,SAACN,GAC7B,MAAO,CACHD,KAAMR,EACNS,UCLkDU,YDS/B,SAACT,GACxB,MAAO,CACHF,KAAMP,EACNS,WCZOgB,CAAyDf,GClBzDgB,MATf,WACE,OACE,sBAAKnD,UAAU,cAAf,UACE,qBAAKA,UAAU,eACf,cAAC,EAAD,QCGSoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCJVO,EAAWC,YAAgB,CAAElD,SAAUkB,IAG5BiC,EAFHC,YAAYH,G,QCIxBI,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJI,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.68c7c964.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"textArea_text__2N4rP\",\"conten\":\"textArea_conten__3sGY9\",\"author\":\"textArea_author__1cQ1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"quotesBox_wrapper__2RWwo\",\"btnWrapper\":\"quotesBox_btnWrapper__2a72h\",\"btn\":\"quotesBox_btn__2bch4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__SGdXd\"};","import React from 'react';\nimport style from './button.module.css';\n\nconst Button = (props) =>{\n    return (\n        <a onClick={()=>{props.getNewQuote()}} className={style.btn}>New quote</a>\n    );\n\n}\n\nexport default Button;","import React from 'react';\nimport style from './textArea.module.css';\n\nconst TextArea = (props) =>{\n   \n    return (\n        <div className={style.text}>\n            <span className={style.conten}>\n                {props.content ? props.content : \"waiting for quote...\"}\n            </span>\n            <span id=\"author\" className={style.author}>\n                {props.author ? props.author: \"...\"}\n            </span>\n        </div>\n    );\n\n}\n\nexport default TextArea;","import React from 'react';\nimport Button from '../button/button.jsx';\nimport TextArea from '../textArea/textArea.jsx';\nimport style from './quotesBox.module.css';\n\nconst QuotesBox = (props) => {\n           \n    let quoteLength = props.newQuote.newQuote.length;\n    let heightAndColor = {height: \"18.5vw\", ...props.newQuote.actualBackgroundCollor }; \n    \n    if(quoteLength < 70){heightAndColor.height = \"18.5vw\"}\n    else if(quoteLength > 90){heightAndColor.height = \"22vw\"}\n    else if(quoteLength > 150){heightAndColor.height = \"24vw\"}\n    else if(quoteLength > 210){heightAndColor.height = \"26vw\"}\n    \n    return (\n        <div className={style.wrapper} style={heightAndColor}>\n            \n            <TextArea author={props.newQuote.newQuote.author} content={props.newQuote.newQuote.content} />\n            <div className={style.btnWrapper}>\n                <Button getNewQuote={props.getNewQuote} />\n                <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" target=\"_blank\" className={style.btn} data-show-count=\"false\">Tweet</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n            </div>\n        </div>\n    );\n\n}\n\nexport default QuotesBox;","const GEN = 'GENERATE'\nconst BACKGROUND_COLOR = \"CHOOSE-COLOR\"\nlet initialState = {\n    newQuote: \"Waiting for new quote\",\n    backgroundColor: [\n        {background:\"linear-gradient(45deg, teal,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #16a085,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #27ae60,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #2c3e50,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #f39c12,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #e74c3c,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #9b59b6,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #FB6964,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #342224,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #472E32,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #BDBB99,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #77B1A9,rgba(172, 217, 231, 0.089))\"},\n        {background:\"linear-gradient(45deg, #73A857,rgba(172, 217, 231, 0.089))\"}\n    ],\n    actualBackgroundCollor: null  \n};\nconst quotesBoxReduser = (state = initialState, action) => {\n    if(action.type === GEN){\n        return{\n            ...state, newQuote: action.quote\n        }\n    }\n    else if(action.type === BACKGROUND_COLOR){\n        return{\n            ...state, actualBackgroundCollor: action.color\n        }\n    }\n    return state;\n};\nexport const generateNewQuote = (quote) => {\n    return {\n        type: GEN,\n        quote\n        \n    }\n};\nexport const chooseColor = (color) => {\n    return {\n        type: BACKGROUND_COLOR,\n        color\n        \n    }\n};\nexport default quotesBoxReduser;","import React from 'react';\nimport { connect } from 'react-redux';\nimport QuotesBox from './quotesBox';\nimport { generateNewQuote, chooseColor } from '../../redux/quotesBox-reduser'\nimport * as axios from 'axios';\n\nclass QuotesBoxContainer extends React.Component {\n    \n\n    componentDidMount() {\n      axios.get('https://api.quotable.io/random').then(response => {\n      this.props.generateNewQuote(response.data);\n      \n      let random = (min, max) =>{\n        return Math.floor(Math.random() * (max - min) + min);\n      }\n\n      this.props.chooseColor(this.props.newQuote.backgroundColor[random(0,12)]);\n    });\n    };\n    getNewQuote = () => {\n      axios.get('https://api.quotable.io/random').then(response => {\n      this.props.generateNewQuote(response.data);\n\n    });\n    };\n        \n    render() { \n      return <QuotesBox {...this.props} getNewQuote={this.getNewQuote} />};\n};\n\nlet mapStateToProps = (state) => {return {newQuote: state.newQuote}};\nexport default connect(mapStateToProps,{generateNewQuote, chooseColor})(QuotesBoxContainer);","import React from 'react';\nimport './App.css';\nimport QuotesBoxContainer from './components/quotesBox/quotesBox-container';\n\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"background\"></div>\n      <QuotesBoxContainer />\n    </div>        \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport quotesBoxReduser from './quotesBox-reduser';\n\nlet redusers = combineReducers({ newQuote: quotesBoxReduser});\nlet store = createStore(redusers);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}